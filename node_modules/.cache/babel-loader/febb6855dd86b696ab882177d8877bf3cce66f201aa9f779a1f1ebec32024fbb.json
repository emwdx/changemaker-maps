{"ast":null,"code":"///src/components/ProjectMap.js\nimport React,{useState,useEffect}from'react';import{Modal,Button,Form}from'react-bootstrap';import Sidebar from'./Sidebar';import Column from'./Column';import blankCards from'../util/BlankCards';import{generateUniqueId}from'../util/helpers';import ReactQuill from'react-quill';import'react-quill/dist/quill.snow.css';// Import the styles or use your own custom CSS\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const modules={toolbar:[[{header:'1'},{header:'2'},{font:[]}],[{size:[]}],['bold','italic','underline','strike','blockquote'],[{list:'ordered'},{list:'bullet'}],['link','image','video'],['clean']]};const formats=['header','font','size','bold','italic','underline','strike','blockquote','list','bullet','link','image','video'];const ProjectMap=()=>{const[showModal,setShowModal]=useState(false);const[currentCard,setCurrentCard]=useState(null);const[cardsInMap,setCardsInMap]=useState(()=>{const storedCards=localStorage.getItem('cardsInMap');return storedCards?JSON.parse(storedCards):[];});const stages=['empathy','define','ideate','prototype','test'];const cardsByStage=stage=>blankCards.filter(card=>card.stage===stage);const columnClasses={empathy:\"text-primary bg-light\",define:\"text-success bg-light\",ideate:\"text-info bg-light\",prototype:\"text-warning bg-light\",test:\"text-danger bg-light\"};const onAddCard=templateCard=>{setCurrentCard({...templateCard,id:generateUniqueId(),details:'',isNew:true// Flag new cards explicitly\n});setShowModal(true);};const saveNewCard=()=>{if(currentCard&&currentCard.title&&currentCard.details){const newCard={...currentCard,id:generateUniqueId(),// Ensure it gets a final unique ID\nisNew:false// Remove the new flag after saving\n};setCardsInMap(prevCards=>[...prevCards,newCard]);setShowModal(false);setCurrentCard(null);}};const handleSaveChanges=()=>{if(currentCard.isNew){saveNewCard();}else{saveEditedCard();}};const saveEditedCard=()=>{const cardIndex=cardsInMap.findIndex(card=>card.id===currentCard.id);if(cardIndex!==-1){const updatedCards=[...cardsInMap];updatedCards[cardIndex]={...updatedCards[cardIndex],...currentCard,isNew:false};setCardsInMap(updatedCards);setShowModal(false);}};const onEditCard=cardId=>{const cardToEdit=cardsInMap.find(card=>card.id===cardId);if(cardToEdit){setCurrentCard(cardToEdit);setShowModal(true);}};const handleDeleteCard=cardId=>{if(window.confirm('Are you sure you want to delete this card?')){const updatedCards=cardsInMap.filter(card=>card.id!==cardId);setCardsInMap(updatedCards);setShowModal(false);}};// Load existing cards from localStorage on component mount\nuseEffect(()=>{const storedCards=localStorage.getItem('cardsInMap');if(storedCards){setCardsInMap(JSON.parse(storedCards));}},[]);// Update localStorage when cardsInMap changes\nuseEffect(()=>{localStorage.setItem('cardsInMap',JSON.stringify(cardsInMap));},[cardsInMap]);return/*#__PURE__*/_jsxs(\"div\",{className:\"container-fluid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(Sidebar,{onAddCard:onAddCard}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-10 d-flex project-map\",children:stages.map(stage=>/*#__PURE__*/_jsx(Column,{title:stage,stage:stage,cards:cardsInMap.filter(card=>card.stage===stage),onEditCard:onEditCard},stage))})]}),/*#__PURE__*/_jsxs(Modal,{show:showModal,onHide:()=>setShowModal(false),children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,className:currentCard?columnClasses[currentCard.stage]:'',children:/*#__PURE__*/_jsx(Modal.Title,{children:currentCard?\"Edit \".concat(currentCard.title,\" Card\"):'Create Card'})}),/*#__PURE__*/_jsx(Modal.Body,{children:/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"formCardTitle\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Title\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter title\",value:(currentCard===null||currentCard===void 0?void 0:currentCard.title)||'',onChange:e=>setCurrentCard({...currentCard,title:e.target.value})})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"formCardDetails\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Details\"}),/*#__PURE__*/_jsx(ReactQuill,{theme:\"snow\",modules:modules,formats:formats,value:(currentCard===null||currentCard===void 0?void 0:currentCard.details)||'',onChange:(content,delta,source,editor)=>setCurrentCard({...currentCard,details:editor.getContents()// Adjust based on what you need\n})})]})]})}),/*#__PURE__*/_jsxs(Modal.Footer,{className:\"justify-content-between\",children:[currentCard&&!currentCard.isNew&&/*#__PURE__*/_jsxs(Button,{variant:\"danger\",onClick:()=>handleDeleteCard(currentCard.id),children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-trash-alt\"}),\" \"]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Button,{variant:\"primary\",onClick:handleSaveChanges,children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-save\"}),\" \"]})})]})]})]});};export default ProjectMap;// Name field in modal, store name on save\n// filter cards based on name","map":{"version":3,"names":["React","useState","useEffect","Modal","Button","Form","Sidebar","Column","blankCards","generateUniqueId","ReactQuill","jsx","_jsx","jsxs","_jsxs","modules","toolbar","header","font","size","list","formats","ProjectMap","showModal","setShowModal","currentCard","setCurrentCard","cardsInMap","setCardsInMap","storedCards","localStorage","getItem","JSON","parse","stages","cardsByStage","stage","filter","card","columnClasses","empathy","define","ideate","prototype","test","onAddCard","templateCard","id","details","isNew","saveNewCard","title","newCard","prevCards","handleSaveChanges","saveEditedCard","cardIndex","findIndex","updatedCards","onEditCard","cardId","cardToEdit","find","handleDeleteCard","window","confirm","setItem","stringify","className","children","map","cards","show","onHide","Header","closeButton","Title","concat","Body","Group","controlId","Label","Control","type","placeholder","value","onChange","e","target","theme","content","delta","source","editor","getContents","Footer","variant","onClick"],"sources":["/Users/weinbergmath/CreativeLocal/reactProjects/changemaker-maps/src/components/ProjectMap.js"],"sourcesContent":["///src/components/ProjectMap.js\n\n\nimport React, { useState , useEffect} from 'react';\nimport { Modal, Button, Form } from 'react-bootstrap';\nimport Sidebar from './Sidebar';\nimport Column from './Column';\nimport blankCards from '../util/BlankCards';\nimport { generateUniqueId } from '../util/helpers'; \n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';  // Import the styles or use your own custom CSS\n\n\nconst modules = {\n    toolbar: [\n        [{ header: '1' }, { header: '2' }, { font: [] }],\n        [{ size: [] }],\n        ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n        [{ list: 'ordered'}, { list: 'bullet' }],\n        ['link', 'image', 'video'],\n        ['clean']\n    ],\n};\n\nconst formats = [\n    'header', 'font', 'size',\n    'bold', 'italic', 'underline', 'strike', 'blockquote',\n    'list', 'bullet',\n    'link', 'image', 'video'\n];\n\nconst ProjectMap = () => {\n    const [showModal, setShowModal] = useState(false);\n  const [currentCard, setCurrentCard] = useState(null);\n  const [cardsInMap, setCardsInMap] = useState(() => {\n    const storedCards = localStorage.getItem('cardsInMap');\n    return storedCards ? JSON.parse(storedCards) : [];\n});\n\n  const stages = ['empathy', 'define', 'ideate', 'prototype', 'test'];\n  const cardsByStage = (stage) => blankCards.filter(card => card.stage === stage);\n  const columnClasses = {\n    empathy: \"text-primary bg-light\",\n    define: \"text-success bg-light\",\n    ideate: \"text-info bg-light\",\n    prototype: \"text-warning bg-light\",\n    test: \"text-danger bg-light\"\n  };\n\n\n  const onAddCard = (templateCard) => {\n    setCurrentCard({\n        ...templateCard,\n        id: generateUniqueId(),\n        details: '',\n        isNew: true  // Flag new cards explicitly\n    });\n    setShowModal(true);\n};\n\n\n\nconst saveNewCard = () => {\n    if (currentCard && currentCard.title && currentCard.details) {\n        const newCard = {\n            ...currentCard,\n            id: generateUniqueId(),  // Ensure it gets a final unique ID\n            isNew: false  // Remove the new flag after saving\n        };\n        setCardsInMap(prevCards => [...prevCards, newCard]);\n        setShowModal(false);\n        setCurrentCard(null);\n    }\n};\n\n\nconst handleSaveChanges = () => {\n    if (currentCard.isNew) {\n        saveNewCard();\n    } else {\n        saveEditedCard();\n    }\n};\n\nconst saveEditedCard = () => {\n    const cardIndex = cardsInMap.findIndex(card => card.id === currentCard.id);\n    if (cardIndex !== -1) {\n        const updatedCards = [...cardsInMap];\n        updatedCards[cardIndex] = { ...updatedCards[cardIndex], ...currentCard, isNew: false };\n        setCardsInMap(updatedCards);\n        setShowModal(false);\n    }\n};\n\n\n  const onEditCard = (cardId) => {\n    const cardToEdit = cardsInMap.find(card => card.id === cardId);\n    if (cardToEdit) {\n      setCurrentCard(cardToEdit);\n      setShowModal(true);\n    }\n  };\n  \n  const handleDeleteCard = (cardId) => {\n    if (window.confirm('Are you sure you want to delete this card?')) {\n        const updatedCards = cardsInMap.filter(card => card.id !== cardId);\n        setCardsInMap(updatedCards);\n        setShowModal(false);\n    }\n};\n\n\n  // Load existing cards from localStorage on component mount\n  useEffect(() => {\n    const storedCards = localStorage.getItem('cardsInMap');\n    if (storedCards) {\n      setCardsInMap(JSON.parse(storedCards));\n    }\n  }, []);\n  \n  \n  // Update localStorage when cardsInMap changes\n  useEffect(() => {\n    localStorage.setItem('cardsInMap', JSON.stringify(cardsInMap));\n  }, [cardsInMap]);\n  \n  return (\n    <div className=\"container-fluid\">\n        <div className=\"row\">\n           \n            <Sidebar onAddCard={onAddCard} />\n       \n            <div className=\"col-md-10 d-flex project-map\">\n                {stages.map(stage => (\n                    <Column key={stage} title={stage} stage={stage} cards={cardsInMap.filter(card => card.stage === stage)} onEditCard={onEditCard} />\n                ))}\n            </div>\n        </div>\n        <Modal show={showModal} onHide={() => setShowModal(false)}>\n    <Modal.Header closeButton className={currentCard ? columnClasses[currentCard.stage] : ''}>\n        <Modal.Title>{currentCard ? `Edit ${currentCard.title} Card` : 'Create Card'}</Modal.Title>\n    </Modal.Header>\n    <Modal.Body>\n        <Form>\n            <Form.Group className=\"mb-3\" controlId=\"formCardTitle\">\n                <Form.Label>Title</Form.Label>\n                <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter title\"\n                    value={currentCard?.title || ''}\n                    onChange={(e) => setCurrentCard({ ...currentCard, title: e.target.value })}\n                />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"formCardDetails\">\n    <Form.Label>Details</Form.Label>\n    <ReactQuill\n    theme=\"snow\"\n    modules={modules}\n    formats={formats}\n    value={currentCard?.details || ''}\n    onChange={(content, delta, source, editor) => setCurrentCard({\n        ...currentCard,\n        details: editor.getContents()  // Adjust based on what you need\n    })}\n/>\n</Form.Group>\n        </Form>\n    </Modal.Body>\n    <Modal.Footer className=\"justify-content-between\">\n        {currentCard && !currentCard.isNew && (\n            <Button variant=\"danger\" onClick={() => handleDeleteCard(currentCard.id)}>\n                <i className=\"fas fa-trash-alt\"></i> {/* Trashcan icon */}\n            </Button>\n        )}\n        <div>\n            \n        <Button variant=\"primary\" onClick={handleSaveChanges}>\n    <i className=\"fas fa-save\"></i> {/* Save icon */}\n</Button>\n        </div>\n    </Modal.Footer>\n</Modal>\n\n    </div>\n);\n};\n\nexport default ProjectMap;\n\n// Name field in modal, store name on save\n// filter cards based on name"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}