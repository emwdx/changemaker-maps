{"ast":null,"code":"var _jsxFileName = \"/Users/eweinberg/Documents/changemaker-maps/src/components/ProjectMap.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport Sidebar from './Sidebar';\nimport Column from './Column';\n\n// This is the starting structure of your cards\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialCards = [{\n  id: 'card-1',\n  title: 'User Interview',\n  stage: 'empathy'\n}, {\n  id: 'card-2',\n  title: 'Empathy Map',\n  stage: 'empathy'\n}, {\n  id: 'card-3',\n  title: 'Define Problem',\n  stage: 'define'\n}, {\n  id: 'card-4',\n  title: 'Problem Statement',\n  stage: 'define'\n}, {\n  id: 'card-5',\n  title: 'Ideate Solutions',\n  stage: 'ideate'\n}, {\n  id: 'card-6',\n  title: 'Sketching Ideas',\n  stage: 'ideate'\n}, {\n  id: 'card-7',\n  title: 'Prototype',\n  stage: 'prototype'\n}, {\n  id: 'card-8',\n  title: 'Mockup',\n  stage: 'prototype'\n}, {\n  id: 'card-9',\n  title: 'Test',\n  stage: 'test'\n}, {\n  id: 'card-10',\n  title: 'Survey Results',\n  stage: 'test'\n}, {\n  id: 'card-11',\n  title: 'Analyze Interviews',\n  stage: 'empathy'\n}, {\n  id: 'card-12',\n  title: 'Define Metrics',\n  stage: 'define'\n}, {\n  id: 'card-13',\n  title: 'Idea Voting',\n  stage: 'ideate'\n}, {\n  id: 'card-14',\n  title: 'Prototype Workshop',\n  stage: 'prototype'\n}, {\n  id: 'card-15',\n  title: 'Pilot Test',\n  stage: 'test'\n}, {\n  id: 'card-16',\n  title: 'Community focus group',\n  stage: 'empathy'\n}, {\n  id: 'card-17',\n  title: 'Define Scope',\n  stage: 'define'\n}, {\n  id: 'card-18',\n  title: 'Ideation Session',\n  stage: 'ideate'\n}, {\n  id: 'card-19',\n  title: 'Build Rough Model',\n  stage: 'prototype'\n}, {\n  id: 'card-20',\n  title: 'Show Stakeholder MVP',\n  stage: 'test'\n}];\nconst ProjectMap = () => {\n  _s();\n  const [showModal, setShowModal] = useState(false);\n  const [cards, setCards] = useState([]);\n  const [newCardType, setNewCardType] = useState('');\n  const handleShowModal = type => {\n    setNewCardType(type);\n    setShowModal(true);\n  };\n  const handleSaveCard = (title, details) => {\n    // Logic to create a new card and add it to the cards state\n    setCards([...cards, {\n      id: 'new-id',\n      title,\n      details,\n      stage: 'empathy'\n    }]); // Placeholder for actual logic\n    setShowModal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      onAddCard: handleShowModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: () => setShowModal(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Add New Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => setShowModal(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleSaveCard,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(ProjectMap, \"Y3XyCjbECMeLFrNi74M002q1C9s=\");\n_c = ProjectMap;\nexport default ProjectMap;\nvar _c;\n$RefreshReg$(_c, \"ProjectMap\");","map":{"version":3,"names":["React","useState","Modal","Button","Sidebar","Column","jsxDEV","_jsxDEV","Fragment","_Fragment","initialCards","id","title","stage","ProjectMap","_s","showModal","setShowModal","cards","setCards","newCardType","setNewCardType","handleShowModal","type","handleSaveCard","details","children","onAddCard","fileName","_jsxFileName","lineNumber","columnNumber","className","show","onHide","Header","closeButton","Title","Body","Footer","variant","onClick","_c","$RefreshReg$"],"sources":["/Users/eweinberg/Documents/changemaker-maps/src/components/ProjectMap.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport Sidebar from './Sidebar';\nimport Column from './Column';\n\n// This is the starting structure of your cards\nconst initialCards = [\n    { id: 'card-1', title: 'User Interview', stage: 'empathy' },\n    { id: 'card-2', title: 'Empathy Map', stage: 'empathy' },\n    { id: 'card-3', title: 'Define Problem', stage: 'define' },\n    { id: 'card-4', title: 'Problem Statement', stage: 'define' },\n    { id: 'card-5', title: 'Ideate Solutions', stage: 'ideate' },\n    { id: 'card-6', title: 'Sketching Ideas', stage: 'ideate' },\n    { id: 'card-7', title: 'Prototype', stage: 'prototype' },\n    { id: 'card-8', title: 'Mockup', stage: 'prototype' },\n    { id: 'card-9', title: 'Test', stage: 'test' },\n    { id: 'card-10', title: 'Survey Results', stage: 'test' },\n    { id: 'card-11', title: 'Analyze Interviews', stage: 'empathy' },\n    { id: 'card-12', title: 'Define Metrics', stage: 'define' },\n    { id: 'card-13', title: 'Idea Voting', stage: 'ideate' },\n    { id: 'card-14', title: 'Prototype Workshop', stage: 'prototype' },\n    { id: 'card-15', title: 'Pilot Test' , stage: 'test' },\n    { id: 'card-16', title: 'Community focus group', stage: 'empathy' },\n    { id: 'card-17', title: 'Define Scope', stage: 'define' },\n    { id: 'card-18', title: 'Ideation Session', stage: 'ideate' },\n    { id: 'card-19', title: 'Build Rough Model', stage: 'prototype' },\n    { id: 'card-20', title: 'Show Stakeholder MVP', stage: 'test' }\n  ];\n  \n\n  const ProjectMap = () => {\n    const [showModal, setShowModal] = useState(false);\n    const [cards, setCards] = useState([]);\n    const [newCardType, setNewCardType] = useState('');\n  \n    const handleShowModal = (type) => {\n      setNewCardType(type);\n      setShowModal(true);\n    };\n  \n    const handleSaveCard = (title, details) => {\n      // Logic to create a new card and add it to the cards state\n      setCards([...cards, { id: 'new-id', title, details, stage: 'empathy' }]); // Placeholder for actual logic\n      setShowModal(false);\n    };\n  \n    return (\n      <>\n        <Sidebar onAddCard={handleShowModal} />\n        <div className=\"project-map\">\n          {/* Columns for each stage */}\n        </div>\n        \n        {/* Modal for adding card details */}\n        <Modal show={showModal} onHide={() => setShowModal(false)}>\n          <Modal.Header closeButton>\n            <Modal.Title>Add New Card</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            {/* Form fields for title and details */}\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n              Close\n            </Button>\n            <Button variant=\"primary\" onClick={handleSaveCard}>\n              Save Changes\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  };\n  \n  export default ProjectMap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}