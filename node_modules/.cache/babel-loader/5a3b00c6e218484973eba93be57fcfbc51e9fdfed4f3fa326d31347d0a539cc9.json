{"ast":null,"code":"var _jsxFileName = \"/Users/eweinberg/Documents/changemaker-maps/src/components/ProjectMap.js\",\n  _s = $RefreshSig$();\n///src/components/ProjectMap.js\n\nimport React, { useState } from 'react';\nimport { Modal, Button, Form } from 'react-bootstrap';\nimport Sidebar from './Sidebar';\nimport Column from './Column';\nimport blankCards from '../util/BlankCards';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectMap = () => {\n  _s();\n  const [showModal, setShowModal] = useState(false);\n  const [currentCard, setCurrentCard] = useState(null);\n  const [cardsInMap, setCardsInMap] = useState([]);\n  const onAddCard = templateCard => {\n    // Assuming templateCard contains the 'stage' and 'title' properties from the clicked card\n    setCurrentCard({\n      ...templateCard,\n      id: `new-${Date.now()}`\n    }); // Generate a temporary unique ID\n    setShowModal(true);\n  };\n  const saveNewCard = newCardDetails => {\n    setCardsInMap([...cardsInMap, {\n      ...currentCard,\n      ...newCardDetails,\n      id: `card-${cardsInMap.length + 1}`\n    }]);\n    setShowModal(false);\n  };\n  const stages = ['empathy', 'define', 'ideate', 'prototype', 'test'];\n  const cardsByStage = stage => blankCards.filter(card => card.stage === stage);\n  const columnClasses = {\n    empathy: \"text-primary bg-light\",\n    define: \"text-success bg-light\",\n    ideate: \"text-info bg-light\",\n    prototype: \"text-warning bg-light\",\n    test: \"text-danger bg-light\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        onAddCard: onAddCard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-10 d-flex flex-grow-1 well\",\n        children: [\" \", stages.map(stage => /*#__PURE__*/_jsxDEV(Column, {\n          title: stage,\n          stage: stage,\n          cards: cardsInMap.filter(card => card.stage === stage)\n        }, stage, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: () => setShowModal(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          className: `${columnClasses[currentCard === null || currentCard === void 0 ? void 0 : currentCard.stage]}`,\n          children: [\"Edit '\", currentCard === null || currentCard === void 0 ? void 0 : currentCard.title, \"'' Card\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formCardTitle\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter title\",\n              defaultValue: currentCard === null || currentCard === void 0 ? void 0 : currentCard.title,\n              onChange: e => setCurrentCard({\n                ...currentCard,\n                title: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formCardDetails\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              placeholder: \"Enter details\",\n              defaultValue: currentCard === null || currentCard === void 0 ? void 0 : currentCard.details,\n              onChange: e => setCurrentCard({\n                ...currentCard,\n                details: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => setShowModal(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: () => saveNewCard({\n            title: currentCard === null || currentCard === void 0 ? void 0 : currentCard.title,\n            details: currentCard === null || currentCard === void 0 ? void 0 : currentCard.details\n          }),\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectMap, \"sSIWFDmZus8dWT5f/0r0U2pCSQk=\");\n_c = ProjectMap;\nexport default ProjectMap;\n\n// Name field in modal, store name on save\n// filter cards based on name\nvar _c;\n$RefreshReg$(_c, \"ProjectMap\");","map":{"version":3,"names":["React","useState","Modal","Button","Form","Sidebar","Column","blankCards","jsxDEV","_jsxDEV","ProjectMap","_s","showModal","setShowModal","currentCard","setCurrentCard","cardsInMap","setCardsInMap","onAddCard","templateCard","id","Date","now","saveNewCard","newCardDetails","length","stages","cardsByStage","stage","filter","card","columnClasses","empathy","define","ideate","prototype","test","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","title","cards","show","onHide","Header","closeButton","Title","Body","Group","controlId","Label","Control","type","placeholder","defaultValue","onChange","e","target","value","as","rows","details","Footer","variant","onClick","_c","$RefreshReg$"],"sources":["/Users/eweinberg/Documents/changemaker-maps/src/components/ProjectMap.js"],"sourcesContent":["///src/components/ProjectMap.js\n\n\nimport React, { useState } from 'react';\nimport { Modal, Button, Form } from 'react-bootstrap';\nimport Sidebar from './Sidebar';\nimport Column from './Column';\nimport blankCards from '../util/BlankCards';\n\n\nconst ProjectMap = () => {\n    const [showModal, setShowModal] = useState(false);\n    const [currentCard, setCurrentCard] = useState(null);\n    const [cardsInMap, setCardsInMap] = useState([]);\n  \n    const onAddCard = (templateCard) => {\n        // Assuming templateCard contains the 'stage' and 'title' properties from the clicked card\n        setCurrentCard({ ...templateCard, id: `new-${Date.now()}` }); // Generate a temporary unique ID\n        setShowModal(true);\n      };\n      \n  \n    const saveNewCard = (newCardDetails) => {\n      setCardsInMap([...cardsInMap, { ...currentCard, ...newCardDetails, id: `card-${cardsInMap.length + 1}` }]);\n      setShowModal(false);\n    };\n  const stages = ['empathy', 'define', 'ideate', 'prototype', 'test'];\n  const cardsByStage = (stage) => blankCards.filter(card => card.stage === stage);\n  const columnClasses = {\n    empathy: \"text-primary bg-light\",\n    define: \"text-success bg-light\",\n    ideate: \"text-info bg-light\",\n    prototype: \"text-warning bg-light\",\n    test: \"text-danger bg-light\"\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <Sidebar onAddCard={onAddCard} />\n        <div className=\"col-md-10 d-flex flex-grow-1 well\"> {/* Make sure this is flex and can grow */}\n          {stages.map(stage => (\n            <Column key={stage} title={stage} stage = {stage} cards={cardsInMap.filter(card => card.stage === stage)} />\n          ))}\n        </div>\n      </div>\n<Modal show={showModal} onHide={() => setShowModal(false)}>\n<Modal.Header closeButton>\n    <Modal.Title className={`${columnClasses[currentCard?.stage]}`}>\n      Edit '{currentCard?.title}'' Card\n    </Modal.Title>\n  </Modal.Header>\n  <Modal.Body>\n    <Form>\n      <Form.Group className=\"mb-3\" controlId=\"formCardTitle\">\n        <Form.Label>Title</Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Enter title\"\n          defaultValue={currentCard?.title}\n          onChange={(e) => setCurrentCard({ ...currentCard, title: e.target.value })}\n        />\n      </Form.Group>\n      <Form.Group className=\"mb-3\" controlId=\"formCardDetails\">\n        <Form.Label>Details</Form.Label>\n        <Form.Control\n          as=\"textarea\"\n          rows={3}\n          placeholder=\"Enter details\"\n          defaultValue={currentCard?.details}\n          onChange={(e) => setCurrentCard({ ...currentCard, details: e.target.value })}\n        />\n      </Form.Group>\n    </Form>\n  </Modal.Body>\n  <Modal.Footer>\n    <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n      Close\n    </Button>\n    <Button variant=\"primary\" onClick={() => saveNewCard({ title: currentCard?.title, details: currentCard?.details })}>\n      Save Changes\n    </Button>\n  </Modal.Footer>\n</Modal>\n\n\n\n\n    </div>\n\n    \n  );\n};\n\nexport default ProjectMap;\n\n// Name field in modal, store name on save\n// filter cards based on name"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}